<Controls:MetroWindow
        x:Class="kaleidot725.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:kaleidot725.ViewModel"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:view="clr-namespace:kaleidot725.View"
        xmlns:conv="clr-namespace:kaleidot725.ViewModel.Converter"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:r="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET45"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        TextOptions.TextRenderingMode="Auto"
        TextElement.FontWeight="Light"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        GlowBrush="{DynamicResource AccentColorBrush}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        Title="KaleidPlayer" Height="520" Width="350">

    <Window.DataContext>
        <local:AudioPlayerViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <conv:TimeConverter x:Key="TimeConv"/>
            <conv:TitleConverter x:Key="TitleConv"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="27"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <DockPanel>
            <StackPanel Grid.Row="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <Button Name="ArtistButton"
                        Background="Transparent" 
                        Foreground="Transparent"
                        BorderBrush="Transparent"
                        Height="auto"
                        Padding="0,0,0,0"
                        Click="ArtistButton_Click">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <view:ArtistIcon Grid.Row="0" Grid.Column="0" Margin="5,5,5,5"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="ARTIST" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" VerticalAlignment="Center" Margin="5,5,5,0" FontSize="16" FontWeight="Light"/>
                        <Border Margin="0,2,0,0" Grid.Row="1" Name="ArtistBorder" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccentColorBrush}"/>
                    </Grid>
                </Button>
                <Button Name="AlbumButton"
                        Background="Transparent" 
                        Foreground="Transparent"
                        BorderBrush="Transparent" 
                        Height="auto"
                        Padding="0,0,0,0"
                        Click="AlbumButton_Click">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <view:AlbumIcon Grid.Row="0" Grid.Column="0" Margin="5,5,5,5"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="ALBUM" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" VerticalAlignment="Center" Margin="5,5,5,0" FontSize="16" FontWeight="Light" Grid.ColumnSpan="2"/>
                        <Border Name="AlbumBorder" Margin="0,2,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccentColorBrush}"/>
                    </Grid>
                </Button>
                <Button Name="AudioButton"
                        Background="Transparent" 
                        Foreground="Transparent"
                        BorderBrush="Transparent" 
                        Height="auto"
                        Padding="0,0,0,0"
                        Click="AudioButton_Click">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <view:AudioIcon Grid.Row="0" Grid.Column="0" Margin="5,5,5,5"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="SONG" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" VerticalAlignment="Center" Margin="5,5,5,0" FontSize="16" FontWeight="Light" Grid.ColumnSpan="2"/>
                        <Border Name="SongBorder" Margin="0,2,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccentColorBrush}"/>
                    </Grid>
                </Button>
                <Button Name="SettingButton"
                        Background="Transparent" 
                        Foreground="Transparent"
                        BorderBrush="Transparent"
                        Height="auto"
                        Padding="0,0,0,0"
                        Click="SettingButton_Click">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <view:SettingIcon  Grid.Row="0" Grid.Column="0" Margin="5,5,5,5"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="SETTING" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" VerticalAlignment="Center" Margin="5,5,5,0" FontSize="16" FontWeight="Light" Grid.ColumnSpan="2"/>
                        <Border Name="SettingBorder" Margin="0,2,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccentColorBrush}"/>
                    </Grid>
                </Button>
            </StackPanel>
        </DockPanel>

        <Frame Grid.Row="1" NavigationUIVisibility="Hidden" Name="myFrame" DataContext="{Binding}"
               Loaded="myFrame_Loaded" Navigated="myFrame_Navigated"/>

        <Grid Grid.Row="2" Grid.RowSpan="1" Background="Transparent" 
              Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>

            <Slider x:Name="TimeSlider"
                    Grid.Column="0"
                    Grid.ColumnSpan="1"
                    Grid.Row="1"
                    Grid.RowSpan="1"
                    Margin="5,0,5,0"
                    Foreground="{DynamicResource MaterialDesignBody}"
                    VerticalAlignment="Center"
                    Value="{Binding SeekNow, Mode=TwoWay}"
                    IsMoveToPointEnabled="True"
                    Minimum="0"
                    Maximum="{Binding SeekMax, Mode=TwoWay}" >
            </Slider>

            <Grid Grid.Column="0"
                  Grid.ColumnSpan="1"
                  Margin="5,0,5,0">
                <TextBlock 
                    Text="{Binding NowPlayMusic, Converter={StaticResource TitleConv}}"
                    Foreground="{DynamicResource MaterialDesignBody}"
                    Background="Transparent"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    FontSize="12"
                    Grid.Column="0"
                    Grid.ColumnSpan="1"/>
            </Grid>

            <Grid Grid.Column="1"
                  Grid.ColumnSpan="4"
                  Grid.Row="0"
                  Grid.RowSpan="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                       Text="{Binding CurrentTime, Converter={StaticResource TimeConv}}"
                       Background="Transparent"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" 
                       Foreground="{DynamicResource MaterialDesignBody}"
                       Grid.Column="0"
                       FontSize="16"
                       Grid.ColumnSpan="1"/>
                <TextBlock
                    Text="/"
                    Background="Transparent"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Foreground="{DynamicResource MaterialDesignBody}"
                    FontSize="16"
                    Grid.Column="1"
                    Grid.ColumnSpan="1"/>
                <TextBlock Text="{Binding TotalTime, Converter={StaticResource TimeConv}}"
                       Background="Transparent"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="16"
                       Grid.Column="2"
                       Foreground="{DynamicResource MaterialDesignBody}"
                       Grid.ColumnSpan="1"/>
            </Grid>


            <Button Grid.Column="1"
                    Grid.ColumnSpan="1"
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Command="{Binding ForwardCommand}"
                    Background="Transparent" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Foreground="Transparent"
                    BorderBrush="Transparent"
                    Padding="0,0,0,0">
                <view:LeftArrowImage/>
            </Button>
            <ToggleButton Grid.Column="2" 
                    Grid.ColumnSpan="1" 
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    IsChecked="{Binding IsPlay}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Button x:Name="StopButton" Padding="0,0,0,0" Background="Transparent" BorderBrush="Transparent" Command="{Binding ReplayCommand}"                     
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <view:StopImage  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button>
                            <Button x:Name="PlayButton" Padding="0,0,0,0" Background="Transparent" BorderBrush="Transparent" Command="{Binding ReplayCommand}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                                <view:PlayImage  VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Button>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="StopButton" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="PlayButton" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="StopButton" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="PlayButton" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <Button Grid.Column="3" 
                    Grid.ColumnSpan="1" 
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Command="{Binding NextCommand}"
                    Background="Transparent" 
                    Foreground="Transparent"
                    BorderBrush="Transparent"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Padding="0,0,0,0">
                <view:RightArrowImage/>
            </Button>
            <ToggleButton Grid.Column="4" 
                    Grid.ColumnSpan="1" 
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="Transparent"
                    IsChecked="{Binding IsRepeat}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Button  x:Name="RepeatOFF" Padding="0,0,0,0" Background="Transparent" BorderBrush="Transparent" Command="{Binding RepeatCommand}"
                                VerticalAlignment="Center" HorizontalAlignment="Center">
                                <view:RepeatIcon VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button>
                            <Button x:Name="RepeatON" Padding="0,0,0,0" Background="Transparent" BorderBrush="Transparent" Command="{Binding RepeatCommand}"
                                VerticalAlignment="Center" HorizontalAlignment="Center">
                                <view:RepeatOnceIcon  VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Button>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RepeatOFF" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="RepeatON" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="RepeatOFF" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RepeatON" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </Grid>
    </Grid>
</Controls:MetroWindow>
